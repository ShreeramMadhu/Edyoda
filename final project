import random

# Class to represent Food Items
class FoodItem:
    def __init__(self, name, quantity, price, discount, stock):
        self.food_id = random.randint(1000, 9999)
        self.name = name
        self.quantity = quantity
        self.price = price
        self.discount = discount
        self.stock = stock

# Class to represent User
class User:
    def __init__(self, full_name, phone_number, email, address, password):
        self.full_name = full_name
        self.phone_number = phone_number
        self.email = email
        self.address = address
        self.password = password
        self.orders = []

    def place_order(self, food_items):
        order_total = 0
        order_details = []

        for index in food_items:
            if 1 <= index <= len(menu):
                food_item = menu[index - 1]
                if food_item.stock > 0:
                    order_details.append(f"{food_item.name} ({food_item.quantity}) [INR {food_item.price}]")
                    order_total += food_item.price
                    food_item.stock -= 1

        if order_details:
            self.orders.append(order_details)
            return order_total
        else:
            return 0

    def view_order_history(self):
        for i, order in enumerate(self.orders, start=1):
            print(f"Order {i}:")
            for item in order:
                print(item)
            print()

    def update_profile(self, new_info):
        self.full_name, self.phone_number, self.email, self.address, self.password = new_info

# Admin functionalities
class Admin:
    def __init__(self):
        self.food_items = []

    def add_food_item(self, name, quantity, price, discount, stock):
        food_item = FoodItem(name, quantity, price, discount, stock)
        self.food_items.append(food_item)

    def edit_food_item(self, food_id, name, quantity, price, discount, stock):
        for item in self.food_items:
            if item.food_id == food_id:
                item.name = name
                item.quantity = quantity
                item.price = price
                item.discount = discount
                item.stock = stock
                break

    def view_food_items(self):
        for item in self.food_items:
            print(f"Food ID: {item.food_id}")
            print(f"Name: {item.name}")
            print(f"Quantity: {item.quantity}")
            print(f"Price: INR {item.price}")
            print(f"Discount: {item.discount}%")
            print(f"Stock: {item.stock}\n")

    def remove_food_item(self, food_id):
        self.food_items = [item for item in self.food_items if item.food_id != food_id]

# Sample menu
menu = [
    FoodItem("Tandoori Chicken", "4 pieces", 240, 0, 50),
    FoodItem("Vegan Burger", "1 Piece", 320, 10, 30),
    FoodItem("Truffle Cake", "500gm", 900, 5, 20),
]

# Sample admin and user
admin = Admin()
user = User("John Doe", "1234567890", "john@example.com", "123 Main St", "password")

# Admin adds food items
for item in menu:
    admin.add_food_item(item.name, item.quantity, item.price, item.discount, item.stock)

# User places an order
order_items = [2, 3]  # User selects Vegan Burger and Truffle Cake
total_cost = user.place_order(order_items)
if total_cost > 0:
    print("Selected Items:")
    for index in order_items:
        print(f"{menu[index - 1].name} ({menu[index - 1].quantity})")
    print(f"Total Cost: INR {total_cost}")
    print("Order Placed successfully!\n")
else:
    print("No items were selected or items are out of stock.\n")

# User views order history
user.view_order_history()

# User updates profile
new_info = ("Jane Doe", "9876543210", "jane@example.com", "456 Elm St", "newpassword")
user.update_profile(new_info)

# Admin views food items
admin.view_food_items()
